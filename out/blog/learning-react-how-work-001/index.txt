3:I[9275,[],""]
5:I[1343,[],""]
6:I[231,["231","static/chunks/231-0e9b5e6eeff08911.js","510","static/chunks/510-04f60a9cc6fcdcee.js","274","static/chunks/app/(base)/blog/%5Bslug%5D/page-5b4e8450ea57a4b7.js"],""]
8:I[2276,["231","static/chunks/231-0e9b5e6eeff08911.js","656","static/chunks/656-127cdb7e764b08c0.js","173","static/chunks/173-7e436074c41c2aaa.js","751","static/chunks/app/(uni-lab)/layout-4c997dca3b148c64.js"],"default"]
4:["slug","learning-react-how-work-001","d"]
9:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
a:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
b:{"display":"inline-block"}
c:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["bmtOMtRm0iDhO-jPICPsU",[[["",{"children":["(base)",{"children":["blog",{"children":[["slug","learning-react-how-work-001","d"],{"children":["__PAGE__?{\"slug\":\"learning-react-how-work-001\"}",{}]}]}]},"$undefined","$undefined",true]}],["",{"children":["(base)",{"children":["blog",{"children":[["slug","learning-react-how-work-001","d"],{"children":["__PAGE__",{},[["$L1","$L2"],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(base)","children","blog","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/bfaa66ced27cdd4d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/3547c22b45876d5b.css","precedence":"next","crossOrigin":"$undefined"}]]}],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(base)","children","blog","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}],null]},[["$","html",null,{"lang":"ja","className":"undefined","children":["$","body",null,{"className":"_layout_body__Ry_X2 __className_1b1067","children":[["$","div",null,{"className":"Header_root__b6LHY","children":["$","div",null,{"className":"Header_inner__rSyT_","children":[["$","div",null,{"className":"Header_backhome___no63","children":["$","$L6",null,{"href":"/","className":"HomeIcon_root__e5ZgV","children":["$","div",null,{"className":"HomeIcon_inner__uIKo6"}]}]}],["$","div",null,{"className":"Header_navs__MOIHF","children":["$","div",null,{"className":"GlobalNav_root__MY4jM","children":[[["$","$L6","works",{"href":"/works/","className":"GlobalNav_nav__9q44_ GlobalNav_isUnactive__RSab7 __className_6bdb93","children":"Works."}],["$","$L6","blog",{"href":"/blog/","className":"GlobalNav_nav__9q44_  __className_6bdb93","children":"Blog."}],["$","$L6","about",{"href":"/about/","className":"GlobalNav_nav__9q44_ GlobalNav_isUnactive__RSab7 __className_6bdb93","children":"TalkMe!"}],false],"$L7"]}]}]]}]}],["$","div",null,{"className":"_layout_container__7wkYi","children":["$","$L8",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(base)","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]}],["$","div",null,{"className":"Footer_root__F7X95","children":["$","small",null,{"className":"Footer_copyright__nD8jL __className_dc46c1","children":"PORTFOLIO SITE. | COPYRIGHT © TSUKASA TOMIOKA ALL RIGHTS RESERVED."}]}],["$","div",null,{"className":"_layout_globalBg__0AsUB"}]]}]}],null],null]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$9","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$a","children":"404"}],["$","div",null,{"style":"$b","children":["$","h2",null,{"style":"$c","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/eaecd205a1d02809.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/a1b8f1c88bfe407d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","2",{"rel":"stylesheet","href":"/_next/static/css/6d9fc8420fac34dd.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","3",{"rel":"stylesheet","href":"/_next/static/css/dee53c710ab47b61.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","4",{"rel":"stylesheet","href":"/_next/static/css/0a8f3c37f99a38f0.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","5",{"rel":"stylesheet","href":"/_next/static/css/cb66cb7879a19bbb.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","6",{"rel":"stylesheet","href":"/_next/static/css/07781e541a2cd79a.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","7",{"rel":"stylesheet","href":"/_next/static/css/e942ac36b8c6ec6b.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","8",{"rel":"stylesheet","href":"/_next/static/css/f808a6ce21d0393d.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","9",{"rel":"stylesheet","href":"/_next/static/css/00ffdb3dc3fc6595.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","10",{"rel":"stylesheet","href":"/_next/static/css/dea7ae0698ffaba9.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","11",{"rel":"stylesheet","href":"/_next/static/css/ef465cddea94a006.css","precedence":"next","crossOrigin":"$undefined"}],["$","link","12",{"rel":"stylesheet","href":"/_next/static/css/7ac57b20459908fc.css","precedence":"next","crossOrigin":"$undefined"}]]}],null],[null,[null,"$Ld"]]]]]
7:["$","$L6",null,{"href":"/uni-lab/","className":"SpecialButton_root__Qs3Da undefined","children":[["$","div",null,{"className":"SpecialButton_text__I6EFb __className_6bdb93","children":"Uni Lab."}],["$","div",null,{"className":"SpecialButton_arrow__Yh2h8","children":["$","svg",null,{"className":"SpecialButton_svg__wxCUL","width":"9","height":"15","viewBox":"0 0 9 15","xmlns":"http://www.w3.org/2000/svg","children":["$","path",null,{"d":"M9 7.50022L0.75 14.613L0.75 0.387458L9 7.50022Z","stroke":"$undefined","fill":"white","className":"$undefined"}]}]}]]}]
e:I[3432,["231","static/chunks/231-0e9b5e6eeff08911.js","510","static/chunks/510-04f60a9cc6fcdcee.js","274","static/chunks/app/(base)/blog/%5Bslug%5D/page-5b4e8450ea57a4b7.js"],"default"]
d:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"React学習:仕組み編｜JSXがレンダリングされるまで〜最小限の構成で仕組み理解（なんとなく理解禁止シリーズ）"}],["$","meta","3",{"name":"description","content":"投稿詳細ページです"}],["$","meta","4",{"name":"robots","content":"noindex, nofollow"}],["$","link","5",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}],["$","meta","6",{"name":"next-size-adjust"}]]
1:null
f:T2f7c,<p>JSXがどのように変換されて最終的に画面上に表示されるか、最小限の構成をその仕組みを学習してみたので、書き残しておきます。</p>
<p>「この記述はなんとなくこうなっているのだろう...」という曖昧な理解のまま放置しておかないように「なんとなく理解禁止」というシリーズでJavaScriptやReactの学習記録を残していて、誰か1人にでも参考になれば嬉しいです...！</p>
<h2>JSXとは</h2>
<p>JSX（JavaScript XML）とは、HTMLのような書き方でJavaScriptソースを記述できるようにした Meta（旧Facebook）が開発した構文です。</p>
<p>例えば、下記のようにシンプルな見出し要素を記述できます。</p>
<pre><code class="language-javascript">const component = &lt;h1&gt;Hello&lt;/h1&gt;;
</code></pre>
<p>これはHTMLではなく、全てJavaScriptのソースです。下記のようにJavaScriptのコードを実行するための印（中括弧{}）の中に、計算結果を書くこともできます。</p>
<pre><code class="language-javascript">const myname = 'Tsukasa';
const component = &lt;h1&gt;Hello {name}!&lt;/h1&gt;;
// componentが出力するHTML結果：&lt;h1&gt;Hello Tsukasa!&lt;/h1&gt;
</code></pre>
<h2>JSXがReact要素に変換されてレンダリングされるまでの流れ</h2>
<p>実際、全然ややこしくなくって、下記の記述だけでH1タグでHello Worldを画面上に表示できます。</p>
<pre><code class="language-html">&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;
</code></pre>
<pre><code class="language-javascript">const root = createRoot(document.getElementById('app'));
root.render(&lt;h1&gt;Hello, world!&lt;/h1&gt;);
</code></pre>
<p>上記の記述を2つに因数分解すると、ざっと下記の流れになります。</p>
<ul>
<li>babel等を使ってJSX構文をReact要素に変換</li>
<li>createRootのrenderメソッドでReact要素をHTMLに挿入</li>
</ul>
<h3>① babel等を使ってJSXをReact要素に変換</h3>
<pre><code class="language-javascript">const component = &lt;h1&gt;Hello, world!&lt;/h1&gt;;
</code></pre>
<p>上記のようなJSXで書いた構文をbabel等のコンパイラを使って、下記のようなJavaScriptコードに変換されます。</p>
<pre><code class="language-javascript">const component = React.createElement(&quot;h1&quot;, null, &quot;Hello, world!&quot;);
</code></pre>
<p>前者と後者の実行結果は同じで、JSXは<code>React.createElement()</code>の記述のシンタックスシュガーということになります。このJavaScriptの形式に変換された後のオブジェクトがReact要素となります。</p>
<p><a href="https://wa3.i-3-i.info/word15703.html">シンタックスシュガー（英：syntax sugar）とは｜「分かりそう」で「分からない」でも「分かった」気になれるIT用語辞典</a></p>
<h3>② createRoot().renderメソッドでReact要素をHTMLに挿入</h3>
<p>あとは簡単で、React要素に変換したJavaScriptオブジェクトを材料に、createRoot().renderメソッドで対象箇所にHTMLを挿入します。</p>
<pre><code class="language-html">&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;
</code></pre>
<pre><code class="language-javascript">// HTMLを挿入するルートを特定
const root = createRoot(document.getElementById('app'));
// renderメソッドを使ってReact要素をルートに挿入
root.render(React.createElement(&quot;h1&quot;, null, &quot;Hello, world!&quot;));
</code></pre>
<p>初めは下記のようにrenderメソッドの引数に直接JSX構文を書いていましたが、上記のコードでも下記でも実行結果は同じです。</p>
<pre><code class="language-javascript">const root = createRoot(document.getElementById('app'));
root.render(&lt;h1&gt;Hello, world!&lt;/h1&gt;);
</code></pre>
<p>内部的に、<code>&lt;h1&gt;Hello, world!&lt;/h1&gt;</code>というJSX構文を<code>React.createElement()</code>に変換していた訳です。</p>
<h3>補足</h3>
<p>ちなみに、<code>React.createElement()</code>の戻り値をコンソールで確認すると、下記のようなオブジェクトを確認できます。</p>
<pre><code class="language-javascript">▼object
$$typeof: Symbol(react.element)
key: null
props: {children: 'Hello, world!'}
ref: null
type: &quot;h1&quot;
_owner: null
</code></pre>
<p><code>React.createElement()</code>の3つの引数が代入されていて...</p>
<ul>
<li><code>React.createElement()</code>の第一引数が<code>type</code>（HTMLタグ）</li>
<li><code>React.createElement()</code>の第二引数が<code>props</code>（属性値）</li>
<li><code>React.createElement()</code>の第三引数が<code>props.children</code>（コンポーネントの子要素）</li>
</ul>
<p>といった形で割り当てられて、このオブジェクトを使ってHTMLタグを作って挿入しているイメージになります。</p>
<p>余談ですが、こうして一つひとつ理解していくとJSXは結局ただのJavaScriptのオブジェクトだという事が分かります。JSX構文と<code>React.createElement()</code>は書き方が違うだけで機能的には同じで、<code>React.createElement()</code>が返すのは普通のJavaScriptなので、JSXは色々変換された結果、最終的にはJavaScriptのオブジェクトとなります。</p>
<h2>【実践！】実際にJSXがレンダリングされるまでの流れを最小限の構成で試してみる</h2>
<p>下記が今回の最小限の構成です。</p>
<pre><code class="language-bash">dist/
├── assets/
└── index.html
src/
├── index.html
└── main.js
babel.config.json
package.json
vite.config.js
</code></pre>
<p>扱っている環境やツールは下記の通り。</p>
<ul>
<li>vite（reactファイルのバンドルのためだけに使用）</li>
<li>babel（JSXからReact要素へのコンパイルのために使用）</li>
<li>yarn（パッケージマネージャー、もちろんnpmでもOK）</li>
</ul>
<p>学習のためにこのような環境にしましたが、普通はNext.jsやRemix等のReactセットアップコマンドやViteのReactテンプレートのセットアップコマンドを叩けば簡単にReactを試せます。</p>
<ul>
<li><a href="https://ja.react.dev/learn/start-a-new-react-project">React プロジェクトを始める</a></li>
<li><a href="https://ja.vitejs.dev/guide/">Viteガイド はじめに</a></li>
</ul>
<h3>1/2｜Viteでバンドルするための環境を整える</h3>
<p>Reactテンプレートのセットアップコマンド（<code>yarn create vite my-vue-app --template react</code>）を使うと、.jsx の拡張子にJSX構文を書けば、仕組みが分からずとも勝手にレンダリングされてしまうので、下記のようにVanillaを選択してフラットな環境にします。</p>
<pre><code class="language-bash">yarn create vite
# Select a framework:
# Vanillaを選択
# Select a variant:
# JavaScriptを選択
cd vite-project
</code></pre>
<p>説明に不要なファイルは省きますが、下記のような構成になります。</p>
<pre><code class="language-bash">vite-project/
├── counter.js
├── index.html
├── main.js
└── package.json
</code></pre>
<p>これで<code>yarn build</code>を叩けば、<code>index.html</code>をエントリーポイントにして<code>main.js</code>のバンドルもした上でプロジェクトルートに<code>dist</code>が吐き出されます。</p>
<h3>2/2｜JSX構文をReact要素に変換するためのbabel環境を整える</h3>
<p>babelの最小限のセットアップ方法は公式ガイドを参照すれば理解できます。</p>
<p><a href="https://babeljs.io/docs/">What is Babel?｜BABEL</a></p>
<pre><code class="language-bash"># 必要なパッケージをインストール
yarn add --dev @babel/core @babel/cli @babel/preset-react
</code></pre>
<pre><code class="language-json">// babel.config.json
// babelの設定ファイルをプロジェクトルートに設置
{
  &quot;presets&quot;: [
    &quot;@babel/preset-react&quot;
  ]
}
</code></pre>
<pre><code class="language-json">// package.json
// package.jsonのscripts.buildにviteも含めたコマンドを設定
{
  &quot;scripts&quot;: {
    &quot;dev&quot;: &quot;vite&quot;,
    &quot;build&quot;: &quot;./node_modules/.bin/babel ./src/main.js --out-file ./src/main.babel.js &amp;&amp; vite build&quot;,
    &quot;preview&quot;: &quot;vite preview&quot;
  },
  &quot;devDependencies&quot;: {
    &quot;@babel/cli&quot;: &quot;^7.24.8&quot;,
    &quot;@babel/core&quot;: &quot;^7.25.2&quot;,
    &quot;@babel/preset-env&quot;: &quot;^7.25.3&quot;,
    &quot;@babel/preset-react&quot;: &quot;^7.24.7&quot;,
    &quot;vite&quot;: &quot;^5.4.0&quot;
  },
  &quot;dependencies&quot;: {
    &quot;react&quot;: &quot;^18.3.1&quot;,
    &quot;react-dom&quot;: &quot;^18.3.1&quot;
  }
}
</code></pre>
<p><code>./node_modules/.bin/babel ./src/main.js --out-file ./src/main.babel.js</code>の記述が、babelを使って<code>./src/main.js</code>を<code>./src/main.babel.js</code>に吐き出すコマンドになります。</p>
<p>babel実行前の<code>./src/main.js</code>と実行後の<code>./src/main.babel.js</code>は下記の通り。</p>
<pre><code class="language-javascript">// ./src/main.js
import './style.css'
import ReactDOM from 'react-dom';
import React from 'react';
import { createRoot } from 'react-dom/client';

const root = createRoot(document.getElementById('app'));
root.render(&lt;h1&gt;Hello&lt;/h1&gt;);
</code></pre>
<pre><code class="language-javascript">// ./src/main.babel.js
import './style.css';
import ReactDOM from 'react-dom';
import React from 'react';
import { createRoot } from 'react-dom/client';
const root = createRoot(document.getElementById('app'));
root.render( /*#__PURE__*/React.createElement(&quot;h1&quot;, null, &quot;Hello&quot;));
</code></pre>
<p><code>root.render()</code>の引数が<code>&lt;h1&gt;Hello&lt;/h1&gt;</code>のJSX構文から<code>React.createElement(&quot;h1&quot;, null, &quot;Hello&quot;)</code>のReact要素に変換されているのが分かります。</p>
<p>あとは、後続の<code>vite build</code>コマンドによって、<code>src/index.html</code>で挿入している<code>&lt;script src=&quot;./main.babel.js&quot; type=&quot;module&quot;&gt;&lt;/script&gt;</code>を読んで、<code>main.babel.js</code>のインポートされているパッケージを全てバンドルしてくれます。</p>
<pre><code class="language-html">&lt;!-- src/index.html --&gt;
&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot; /&gt;
    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
    &lt;title&gt;Vite App&lt;/title&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;
    &lt;script src=&quot;./main.babel.js&quot; type=&quot;module&quot;&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<pre><code class="language-html">&lt;!-- dist/index.html --&gt;
&lt;!doctype html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot; /&gt;
    &lt;link rel=&quot;icon&quot; type=&quot;image/svg+xml&quot; href=&quot;/vite.svg&quot; /&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
    &lt;title&gt;Vite App&lt;/title&gt;
    &lt;script type=&quot;module&quot; crossorigin src=&quot;./assets/index-CTqbuTW-.js&quot;&gt;&lt;/script&gt;
    &lt;link rel=&quot;stylesheet&quot; crossorigin href=&quot;./assets/index-BfibREyH.css&quot;&gt;
  &lt;/head&gt;
  &lt;body&gt;
    &lt;div id=&quot;app&quot;&gt;&lt;!-- ./assets/index-CTqbuTW-.jsによって&lt;h1&gt;Hello&lt;/h1&gt;が挿入される --&gt;&lt;/div&gt;
  &lt;/body&gt;
&lt;/html&gt;
</code></pre>
2:[["$","div",null,{"className":"ArticleHead_root__L1n1V","children":[["$","div",null,{"className":"ArticleHead_thumbnail__1lpX1","children":["$","div",null,{"className":"EmojiIcon_root__S4m4O","children":"🐕"}]}],["$","h1",null,{"className":"ArticleHead_head__IBrwC [object Object]","children":"React学習:仕組み編｜JSXがレンダリングされるまで〜最小限の構成で仕組み理解（なんとなく理解禁止シリーズ）"}],["$","div",null,{"className":"ArticleHead_info__ux4SN","children":[["$","div",null,{"className":"$undefined","children":["$","div",null,{"className":"UpdateDate_root__DTa6J","children":[["$","div",null,{"className":"UpdateDate_icon__5bcpN","children":["$","svg",null,{"xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 512 512","children":[["$","path",null,{"fill":"white","stroke":"$undefined","d":"M403.925,108.102c-27.595-27.595-62.899-47.558-102.459-56.29L304.182,0L201.946,53.867l-27.306,14.454 l-5.066,2.654l8.076,4.331l38.16,20.542l81.029,43.602l2.277-42.859c28.265,7.546,53.438,22.53,73.623,42.638 c29.94,29.939,48.358,71.119,48.358,116.776c0,23.407-4.843,45.58-13.575,65.687l40.37,17.532 c11.076-25.463,17.242-53.637,17.242-83.219C465.212,198.306,441.727,145.904,403.925,108.102z"}],["$","path",null,{"fill":"white","stroke":"$undefined","d":"M296.256,416.151l-81.101-43.612l-2.272,42.869c-28.26-7.555-53.51-22.53-73.618-42.636 c-29.945-29.95-48.364-71.12-48.364-116.767c0-23.427,4.844-45.522,13.576-65.697l-40.37-17.531 c-11.076,25.53-17.242,53.723-17.242,83.228c0,57.679,23.407,110.157,61.21,147.893c27.595,27.594,62.899,47.548,102.453,56.202 l-2.716,51.9l102.169-53.878l27.455-14.454l4.988-2.643l-7.999-4.332L296.256,416.151z"}]]}]}],["$","span",null,{"className":"UpdateDate_text__qw_77","children":"2024年08月18日"}]]}]}],["$","div",null,{"className":"$undefined","children":["$","ul",null,{"className":"Categorys_root__pGks1","children":[["$","div",null,{"className":"Category_root__QLnRI","children":"React学習記録｜なんとなく理解禁止シリーズ"}]]}]}]]}]]}],["$","div",null,{"className":"_slug__contents__tliD3","children":["$","div",null,{"className":"BlogTemplate_root__1v2_7","children":[["$","main",null,{"className":"_slug__main__Lje2N","children":["$","div",null,{"className":"BlogTemplate_main__lG7yD","children":["$","$Le",null,{"children":"$f"}]}]}],["$","nav",null,{"className":"BlogTemplate_nav__4DMiI","children":"$L10"}]]}]}]]
10:["$","div",null,{"className":"BlogSidebar_root__uw15U","children":[["$","div",null,{"className":"BlogSidebar_pickup__vOFcW","children":[["$","h3",null,{"className":"Heading_root__8C_HZ Heading_border__cET98 Heading_small__z92ds __className_6bdb93","children":"Pickup Contents."}],["$","div",null,{"className":"PickupArticles_rootInline__zSCZ9","children":[["$","$L6","learning-react-how-work-001",{"href":"/blog/learning-react-how-work-001","children":"React学習:仕組み編｜JSXがレンダリングされるまで〜最小限の構成で仕組み理解（なんとなく理解禁止シリーズ）"}],false,false,false]}]]}],["$","div",null,{"className":"BlogSidebar_categorys__HAy9v","children":[["$","h3",null,{"className":"Heading_root__8C_HZ Heading_border__cET98 Heading_small__z92ds __className_6bdb93","children":"Categorys."}],"$L11"]}]]}]
11:["$","ul",null,{"className":"CategoryLinks_root__f8qHI","children":[["$","li","learning-react",{"className":"$undefined","children":["$","$L6",null,{"href":"/blog/blog-category/learning-react","children":"React学習記録｜なんとなく理解禁止シリーズ"}]}],["$","li","learning-javascript",{"className":"$undefined","children":["$","$L6",null,{"href":"/blog/blog-category/learning-javascript","children":"JavaScript学習記録｜なんとなく理解禁止シリーズ"}]}]]}]
